// This file is generated by Simplicity Studio.  Please do not edit manually.
//
//

// Enclosing macro to prevent multiple inclusion
#ifndef SILABS_EMBER_AF_DEBUG_PRINTING_CONFIGURATION
#define SILABS_EMBER_AF_DEBUG_PRINTING_CONFIGURATION




// This file contains the generated macros for the debug printing
// Global macro, if this is commented out, there is no printing
#define EMBER_AF_PRINT_ENABLE



// Generated bit array and name array that is used by thedebug printing library.
#define EMBER_AF_PRINT_CORE 0x0001
#define EMBER_AF_PRINT_APP 0x0002
#define EMBER_AF_PRINT_BITS { 0x03 }
#define EMBER_AF_PRINT_NAMES { \
  "Core",\
  "Application",\
  NULL\
}
#define EMBER_AF_PRINT_NAME_NUMBER 2


// Generated functions for use within plugin ADC
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_ADC)
#define emberAfPluginAdcPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_ADC, __VA_ARGS__)
#define emberAfPluginAdcPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_ADC,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginAdcFlush()
#define emberAfPluginAdcDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_ADC) ) { x; }
#define emberAfPluginAdcPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_ADC, (buffer), (len), (withSpace))
#define emberAfPluginAdcPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_ADC, (buffer))
#else
#define emberAfPluginAdcPrint(...)
#define emberAfPluginAdcPrintln(...)
#define emberAfPluginAdcFlush()
#define emberAfPluginAdcDebugExec(x)
#define emberAfPluginAdcPrintBuffer(buffer, len, withSpace)
#define emberAfPluginAdcPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_ADC)


// Generated functions for use within plugin Address Configuration Debug
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_ADDRESS_CONFIGURATION_DEBUG)
#define emberAfPluginAddressConfigurationDebugPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_ADDRESS_CONFIGURATION_DEBUG, __VA_ARGS__)
#define emberAfPluginAddressConfigurationDebugPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_ADDRESS_CONFIGURATION_DEBUG,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginAddressConfigurationDebugFlush()
#define emberAfPluginAddressConfigurationDebugDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_ADDRESS_CONFIGURATION_DEBUG) ) { x; }
#define emberAfPluginAddressConfigurationDebugPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_ADDRESS_CONFIGURATION_DEBUG, (buffer), (len), (withSpace))
#define emberAfPluginAddressConfigurationDebugPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_ADDRESS_CONFIGURATION_DEBUG, (buffer))
#else
#define emberAfPluginAddressConfigurationDebugPrint(...)
#define emberAfPluginAddressConfigurationDebugPrintln(...)
#define emberAfPluginAddressConfigurationDebugFlush()
#define emberAfPluginAddressConfigurationDebugDebugExec(x)
#define emberAfPluginAddressConfigurationDebugPrintBuffer(buffer, len, withSpace)
#define emberAfPluginAddressConfigurationDebugPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_ADDRESS_CONFIGURATION_DEBUG)


// Generated functions for use within plugin Antenna Stub
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_ANTENNA_STUB)
#define emberAfPluginAntennaStubPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_ANTENNA_STUB, __VA_ARGS__)
#define emberAfPluginAntennaStubPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_ANTENNA_STUB,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginAntennaStubFlush()
#define emberAfPluginAntennaStubDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_ANTENNA_STUB) ) { x; }
#define emberAfPluginAntennaStubPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_ANTENNA_STUB, (buffer), (len), (withSpace))
#define emberAfPluginAntennaStubPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_ANTENNA_STUB, (buffer))
#else
#define emberAfPluginAntennaStubPrint(...)
#define emberAfPluginAntennaStubPrintln(...)
#define emberAfPluginAntennaStubFlush()
#define emberAfPluginAntennaStubDebugExec(x)
#define emberAfPluginAntennaStubPrintBuffer(buffer, len, withSpace)
#define emberAfPluginAntennaStubPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_ANTENNA_STUB)


// Generated functions for use within plugin Basic Server
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_BASIC_SERVER)
#define emberAfPluginBasicServerPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_BASIC_SERVER, __VA_ARGS__)
#define emberAfPluginBasicServerPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_BASIC_SERVER,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginBasicServerFlush()
#define emberAfPluginBasicServerDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_BASIC_SERVER) ) { x; }
#define emberAfPluginBasicServerPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_BASIC_SERVER, (buffer), (len), (withSpace))
#define emberAfPluginBasicServerPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_BASIC_SERVER, (buffer))
#else
#define emberAfPluginBasicServerPrint(...)
#define emberAfPluginBasicServerPrintln(...)
#define emberAfPluginBasicServerFlush()
#define emberAfPluginBasicServerDebugExec(x)
#define emberAfPluginBasicServerPrintBuffer(buffer, len, withSpace)
#define emberAfPluginBasicServerPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_BASIC_SERVER)


// Generated functions for use within plugin CLI
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_CLI)
#define emberAfPluginCliPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_CLI, __VA_ARGS__)
#define emberAfPluginCliPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_CLI,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginCliFlush()
#define emberAfPluginCliDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_CLI) ) { x; }
#define emberAfPluginCliPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_CLI, (buffer), (len), (withSpace))
#define emberAfPluginCliPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_CLI, (buffer))
#else
#define emberAfPluginCliPrint(...)
#define emberAfPluginCliPrintln(...)
#define emberAfPluginCliFlush()
#define emberAfPluginCliDebugExec(x)
#define emberAfPluginCliPrintBuffer(buffer, len, withSpace)
#define emberAfPluginCliPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_CLI)


// Generated functions for use within plugin CoAP CLI
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_COAP_CLI)
#define emberAfPluginCoapCliPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_COAP_CLI, __VA_ARGS__)
#define emberAfPluginCoapCliPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_COAP_CLI,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginCoapCliFlush()
#define emberAfPluginCoapCliDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_COAP_CLI) ) { x; }
#define emberAfPluginCoapCliPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_COAP_CLI, (buffer), (len), (withSpace))
#define emberAfPluginCoapCliPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_COAP_CLI, (buffer))
#else
#define emberAfPluginCoapCliPrint(...)
#define emberAfPluginCoapCliPrintln(...)
#define emberAfPluginCoapCliFlush()
#define emberAfPluginCoapCliDebugExec(x)
#define emberAfPluginCoapCliPrintBuffer(buffer, len, withSpace)
#define emberAfPluginCoapCliPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_COAP_CLI)


// Generated functions for use within plugin CoAP Dispatch
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_COAP_DISPATCH)
#define emberAfPluginCoapDispatchPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_COAP_DISPATCH, __VA_ARGS__)
#define emberAfPluginCoapDispatchPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_COAP_DISPATCH,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginCoapDispatchFlush()
#define emberAfPluginCoapDispatchDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_COAP_DISPATCH) ) { x; }
#define emberAfPluginCoapDispatchPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_COAP_DISPATCH, (buffer), (len), (withSpace))
#define emberAfPluginCoapDispatchPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_COAP_DISPATCH, (buffer))
#else
#define emberAfPluginCoapDispatchPrint(...)
#define emberAfPluginCoapDispatchPrintln(...)
#define emberAfPluginCoapDispatchFlush()
#define emberAfPluginCoapDispatchDebugExec(x)
#define emberAfPluginCoapDispatchPrintBuffer(buffer, len, withSpace)
#define emberAfPluginCoapDispatchPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_COAP_DISPATCH)


// Generated functions for use within plugin Command Interpreter
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_COMMAND_INTERPRETER2)
#define emberAfPluginCommandInterpreter2Print(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_COMMAND_INTERPRETER2, __VA_ARGS__)
#define emberAfPluginCommandInterpreter2Println(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_COMMAND_INTERPRETER2,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginCommandInterpreter2Flush()
#define emberAfPluginCommandInterpreter2DebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_COMMAND_INTERPRETER2) ) { x; }
#define emberAfPluginCommandInterpreter2PrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_COMMAND_INTERPRETER2, (buffer), (len), (withSpace))
#define emberAfPluginCommandInterpreter2PrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_COMMAND_INTERPRETER2, (buffer))
#else
#define emberAfPluginCommandInterpreter2Print(...)
#define emberAfPluginCommandInterpreter2Println(...)
#define emberAfPluginCommandInterpreter2Flush()
#define emberAfPluginCommandInterpreter2DebugExec(x)
#define emberAfPluginCommandInterpreter2PrintBuffer(buffer, len, withSpace)
#define emberAfPluginCommandInterpreter2PrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_COMMAND_INTERPRETER2)


// Generated functions for use within plugin Connection Manager CLI
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_CONNECTION_MANAGER_CLI)
#define emberAfPluginConnectionManagerCliPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_CONNECTION_MANAGER_CLI, __VA_ARGS__)
#define emberAfPluginConnectionManagerCliPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_CONNECTION_MANAGER_CLI,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginConnectionManagerCliFlush()
#define emberAfPluginConnectionManagerCliDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_CONNECTION_MANAGER_CLI) ) { x; }
#define emberAfPluginConnectionManagerCliPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_CONNECTION_MANAGER_CLI, (buffer), (len), (withSpace))
#define emberAfPluginConnectionManagerCliPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_CONNECTION_MANAGER_CLI, (buffer))
#else
#define emberAfPluginConnectionManagerCliPrint(...)
#define emberAfPluginConnectionManagerCliPrintln(...)
#define emberAfPluginConnectionManagerCliFlush()
#define emberAfPluginConnectionManagerCliDebugExec(x)
#define emberAfPluginConnectionManagerCliPrintBuffer(buffer, len, withSpace)
#define emberAfPluginConnectionManagerCliPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_CONNECTION_MANAGER_CLI)


// Generated functions for use within plugin Connection Manager: In Band Joining
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_CONNECTION_MANAGER_JIB)
#define emberAfPluginConnectionManagerJibPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_CONNECTION_MANAGER_JIB, __VA_ARGS__)
#define emberAfPluginConnectionManagerJibPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_CONNECTION_MANAGER_JIB,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginConnectionManagerJibFlush()
#define emberAfPluginConnectionManagerJibDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_CONNECTION_MANAGER_JIB) ) { x; }
#define emberAfPluginConnectionManagerJibPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_CONNECTION_MANAGER_JIB, (buffer), (len), (withSpace))
#define emberAfPluginConnectionManagerJibPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_CONNECTION_MANAGER_JIB, (buffer))
#else
#define emberAfPluginConnectionManagerJibPrint(...)
#define emberAfPluginConnectionManagerJibPrintln(...)
#define emberAfPluginConnectionManagerJibFlush()
#define emberAfPluginConnectionManagerJibDebugExec(x)
#define emberAfPluginConnectionManagerJibPrintBuffer(buffer, len, withSpace)
#define emberAfPluginConnectionManagerJibPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_CONNECTION_MANAGER_JIB)


// Generated functions for use within plugin Debug JTAG stub
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_DEBUG_CHANNEL_STUB)
#define emberAfPluginDebugChannelStubPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_DEBUG_CHANNEL_STUB, __VA_ARGS__)
#define emberAfPluginDebugChannelStubPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_DEBUG_CHANNEL_STUB,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginDebugChannelStubFlush()
#define emberAfPluginDebugChannelStubDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_DEBUG_CHANNEL_STUB) ) { x; }
#define emberAfPluginDebugChannelStubPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_DEBUG_CHANNEL_STUB, (buffer), (len), (withSpace))
#define emberAfPluginDebugChannelStubPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_DEBUG_CHANNEL_STUB, (buffer))
#else
#define emberAfPluginDebugChannelStubPrint(...)
#define emberAfPluginDebugChannelStubPrintln(...)
#define emberAfPluginDebugChannelStubFlush()
#define emberAfPluginDebugChannelStubDebugExec(x)
#define emberAfPluginDebugChannelStubPrintBuffer(buffer, len, withSpace)
#define emberAfPluginDebugChannelStubPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_DEBUG_CHANNEL_STUB)


// Generated functions for use within plugin Debug Print
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_DEBUG_PRINT)
#define emberAfPluginDebugPrintPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_DEBUG_PRINT, __VA_ARGS__)
#define emberAfPluginDebugPrintPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_DEBUG_PRINT,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginDebugPrintFlush()
#define emberAfPluginDebugPrintDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_DEBUG_PRINT) ) { x; }
#define emberAfPluginDebugPrintPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_DEBUG_PRINT, (buffer), (len), (withSpace))
#define emberAfPluginDebugPrintPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_DEBUG_PRINT, (buffer))
#else
#define emberAfPluginDebugPrintPrint(...)
#define emberAfPluginDebugPrintPrintln(...)
#define emberAfPluginDebugPrintFlush()
#define emberAfPluginDebugPrintDebugExec(x)
#define emberAfPluginDebugPrintPrintBuffer(buffer, len, withSpace)
#define emberAfPluginDebugPrintPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_DEBUG_PRINT)


// Generated functions for use within plugin Dynamic Host Configuration Protocol (DHCP) Client
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_DHCP_CLIENT)
#define emberAfPluginDhcpClientPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_DHCP_CLIENT, __VA_ARGS__)
#define emberAfPluginDhcpClientPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_DHCP_CLIENT,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginDhcpClientFlush()
#define emberAfPluginDhcpClientDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_DHCP_CLIENT) ) { x; }
#define emberAfPluginDhcpClientPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_DHCP_CLIENT, (buffer), (len), (withSpace))
#define emberAfPluginDhcpClientPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_DHCP_CLIENT, (buffer))
#else
#define emberAfPluginDhcpClientPrint(...)
#define emberAfPluginDhcpClientPrintln(...)
#define emberAfPluginDhcpClientFlush()
#define emberAfPluginDhcpClientDebugExec(x)
#define emberAfPluginDhcpClientPrintBuffer(buffer, len, withSpace)
#define emberAfPluginDhcpClientPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_DHCP_CLIENT)


// Generated functions for use within plugin DHCP Library
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_DHCP_LIBRARY)
#define emberAfPluginDhcpLibraryPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_DHCP_LIBRARY, __VA_ARGS__)
#define emberAfPluginDhcpLibraryPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_DHCP_LIBRARY,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginDhcpLibraryFlush()
#define emberAfPluginDhcpLibraryDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_DHCP_LIBRARY) ) { x; }
#define emberAfPluginDhcpLibraryPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_DHCP_LIBRARY, (buffer), (len), (withSpace))
#define emberAfPluginDhcpLibraryPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_DHCP_LIBRARY, (buffer))
#else
#define emberAfPluginDhcpLibraryPrint(...)
#define emberAfPluginDhcpLibraryPrintln(...)
#define emberAfPluginDhcpLibraryFlush()
#define emberAfPluginDhcpLibraryDebugExec(x)
#define emberAfPluginDhcpLibraryPrintBuffer(buffer, len, withSpace)
#define emberAfPluginDhcpLibraryPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_DHCP_LIBRARY)


// Generated functions for use within plugin Diagnostic Stub
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_DIAGNOSTIC_STUB)
#define emberAfPluginDiagnosticStubPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_DIAGNOSTIC_STUB, __VA_ARGS__)
#define emberAfPluginDiagnosticStubPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_DIAGNOSTIC_STUB,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginDiagnosticStubFlush()
#define emberAfPluginDiagnosticStubDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_DIAGNOSTIC_STUB) ) { x; }
#define emberAfPluginDiagnosticStubPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_DIAGNOSTIC_STUB, (buffer), (len), (withSpace))
#define emberAfPluginDiagnosticStubPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_DIAGNOSTIC_STUB, (buffer))
#else
#define emberAfPluginDiagnosticStubPrint(...)
#define emberAfPluginDiagnosticStubPrintln(...)
#define emberAfPluginDiagnosticStubFlush()
#define emberAfPluginDiagnosticStubDebugExec(x)
#define emberAfPluginDiagnosticStubPrintBuffer(buffer, len, withSpace)
#define emberAfPluginDiagnosticStubPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_DIAGNOSTIC_STUB)


// Generated functions for use within plugin DTLS Authentication Parameters
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_DTLS_AUTH_PARAMS)
#define emberAfPluginDtlsAuthParamsPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_DTLS_AUTH_PARAMS, __VA_ARGS__)
#define emberAfPluginDtlsAuthParamsPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_DTLS_AUTH_PARAMS,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginDtlsAuthParamsFlush()
#define emberAfPluginDtlsAuthParamsDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_DTLS_AUTH_PARAMS) ) { x; }
#define emberAfPluginDtlsAuthParamsPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_DTLS_AUTH_PARAMS, (buffer), (len), (withSpace))
#define emberAfPluginDtlsAuthParamsPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_DTLS_AUTH_PARAMS, (buffer))
#else
#define emberAfPluginDtlsAuthParamsPrint(...)
#define emberAfPluginDtlsAuthParamsPrintln(...)
#define emberAfPluginDtlsAuthParamsFlush()
#define emberAfPluginDtlsAuthParamsDebugExec(x)
#define emberAfPluginDtlsAuthParamsPrintBuffer(buffer, len, withSpace)
#define emberAfPluginDtlsAuthParamsPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_DTLS_AUTH_PARAMS)


// Generated functions for use within plugin EEPROM
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_EEPROM)
#define emberAfPluginEepromPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_EEPROM, __VA_ARGS__)
#define emberAfPluginEepromPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_EEPROM,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginEepromFlush()
#define emberAfPluginEepromDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_EEPROM) ) { x; }
#define emberAfPluginEepromPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_EEPROM, (buffer), (len), (withSpace))
#define emberAfPluginEepromPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_EEPROM, (buffer))
#else
#define emberAfPluginEepromPrint(...)
#define emberAfPluginEepromPrintln(...)
#define emberAfPluginEepromFlush()
#define emberAfPluginEepromDebugExec(x)
#define emberAfPluginEepromPrintBuffer(buffer, len, withSpace)
#define emberAfPluginEepromPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_EEPROM)


// Generated functions for use within plugin HAL Library
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_HAL_LIBRARY)
#define emberAfPluginHalLibraryPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_HAL_LIBRARY, __VA_ARGS__)
#define emberAfPluginHalLibraryPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_HAL_LIBRARY,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginHalLibraryFlush()
#define emberAfPluginHalLibraryDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_HAL_LIBRARY) ) { x; }
#define emberAfPluginHalLibraryPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_HAL_LIBRARY, (buffer), (len), (withSpace))
#define emberAfPluginHalLibraryPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_HAL_LIBRARY, (buffer))
#else
#define emberAfPluginHalLibraryPrint(...)
#define emberAfPluginHalLibraryPrintln(...)
#define emberAfPluginHalLibraryFlush()
#define emberAfPluginHalLibraryDebugExec(x)
#define emberAfPluginHalLibraryPrintBuffer(buffer, len, withSpace)
#define emberAfPluginHalLibraryPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_HAL_LIBRARY)


// Generated functions for use within plugin ICMP CLI
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_ICMP_CLI)
#define emberAfPluginIcmpCliPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_ICMP_CLI, __VA_ARGS__)
#define emberAfPluginIcmpCliPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_ICMP_CLI,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginIcmpCliFlush()
#define emberAfPluginIcmpCliDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_ICMP_CLI) ) { x; }
#define emberAfPluginIcmpCliPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_ICMP_CLI, (buffer), (len), (withSpace))
#define emberAfPluginIcmpCliPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_ICMP_CLI, (buffer))
#else
#define emberAfPluginIcmpCliPrint(...)
#define emberAfPluginIcmpCliPrintln(...)
#define emberAfPluginIcmpCliFlush()
#define emberAfPluginIcmpCliDebugExec(x)
#define emberAfPluginIcmpCliPrintBuffer(buffer, len, withSpace)
#define emberAfPluginIcmpCliPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_ICMP_CLI)


// Generated functions for use within plugin ICMP Debug
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_ICMP_DEBUG)
#define emberAfPluginIcmpDebugPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_ICMP_DEBUG, __VA_ARGS__)
#define emberAfPluginIcmpDebugPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_ICMP_DEBUG,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginIcmpDebugFlush()
#define emberAfPluginIcmpDebugDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_ICMP_DEBUG) ) { x; }
#define emberAfPluginIcmpDebugPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_ICMP_DEBUG, (buffer), (len), (withSpace))
#define emberAfPluginIcmpDebugPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_ICMP_DEBUG, (buffer))
#else
#define emberAfPluginIcmpDebugPrint(...)
#define emberAfPluginIcmpDebugPrintln(...)
#define emberAfPluginIcmpDebugFlush()
#define emberAfPluginIcmpDebugDebugExec(x)
#define emberAfPluginIcmpDebugPrintBuffer(buffer, len, withSpace)
#define emberAfPluginIcmpDebugPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_ICMP_DEBUG)


// Generated functions for use within plugin Identify Server
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_IDENTIFY_SERVER)
#define emberAfPluginIdentifyServerPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_IDENTIFY_SERVER, __VA_ARGS__)
#define emberAfPluginIdentifyServerPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_IDENTIFY_SERVER,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginIdentifyServerFlush()
#define emberAfPluginIdentifyServerDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_IDENTIFY_SERVER) ) { x; }
#define emberAfPluginIdentifyServerPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_IDENTIFY_SERVER, (buffer), (len), (withSpace))
#define emberAfPluginIdentifyServerPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_IDENTIFY_SERVER, (buffer))
#else
#define emberAfPluginIdentifyServerPrint(...)
#define emberAfPluginIdentifyServerPrintln(...)
#define emberAfPluginIdentifyServerFlush()
#define emberAfPluginIdentifyServerDebugExec(x)
#define emberAfPluginIdentifyServerPrintBuffer(buffer, len, withSpace)
#define emberAfPluginIdentifyServerPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_IDENTIFY_SERVER)


// Generated functions for use within plugin Idle/Sleep
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_IDLE_SLEEP)
#define emberAfPluginIdleSleepPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_IDLE_SLEEP, __VA_ARGS__)
#define emberAfPluginIdleSleepPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_IDLE_SLEEP,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginIdleSleepFlush()
#define emberAfPluginIdleSleepDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_IDLE_SLEEP) ) { x; }
#define emberAfPluginIdleSleepPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_IDLE_SLEEP, (buffer), (len), (withSpace))
#define emberAfPluginIdleSleepPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_IDLE_SLEEP, (buffer))
#else
#define emberAfPluginIdleSleepPrint(...)
#define emberAfPluginIdleSleepPrintln(...)
#define emberAfPluginIdleSleepFlush()
#define emberAfPluginIdleSleepDebugExec(x)
#define emberAfPluginIdleSleepPrintBuffer(buffer, len, withSpace)
#define emberAfPluginIdleSleepPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_IDLE_SLEEP)


// Generated functions for use within plugin Main
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_MAIN)
#define emberAfPluginMainPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_MAIN, __VA_ARGS__)
#define emberAfPluginMainPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_MAIN,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginMainFlush()
#define emberAfPluginMainDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_MAIN) ) { x; }
#define emberAfPluginMainPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_MAIN, (buffer), (len), (withSpace))
#define emberAfPluginMainPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_MAIN, (buffer))
#else
#define emberAfPluginMainPrint(...)
#define emberAfPluginMainPrintln(...)
#define emberAfPluginMainFlush()
#define emberAfPluginMainDebugExec(x)
#define emberAfPluginMainPrintBuffer(buffer, len, withSpace)
#define emberAfPluginMainPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_MAIN)


// Generated functions for use within plugin mbed TLS Cryptographic Library
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_MBEDTLS_LIBRARY)
#define emberAfPluginMbedtlsLibraryPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_MBEDTLS_LIBRARY, __VA_ARGS__)
#define emberAfPluginMbedtlsLibraryPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_MBEDTLS_LIBRARY,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginMbedtlsLibraryFlush()
#define emberAfPluginMbedtlsLibraryDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_MBEDTLS_LIBRARY) ) { x; }
#define emberAfPluginMbedtlsLibraryPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_MBEDTLS_LIBRARY, (buffer), (len), (withSpace))
#define emberAfPluginMbedtlsLibraryPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_MBEDTLS_LIBRARY, (buffer))
#else
#define emberAfPluginMbedtlsLibraryPrint(...)
#define emberAfPluginMbedtlsLibraryPrintln(...)
#define emberAfPluginMbedtlsLibraryFlush()
#define emberAfPluginMbedtlsLibraryDebugExec(x)
#define emberAfPluginMbedtlsLibraryPrintBuffer(buffer, len, withSpace)
#define emberAfPluginMbedtlsLibraryPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_MBEDTLS_LIBRARY)


// Generated functions for use within plugin Network Management CLI
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_NETWORK_MANAGEMENT_CLI)
#define emberAfPluginNetworkManagementCliPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_NETWORK_MANAGEMENT_CLI, __VA_ARGS__)
#define emberAfPluginNetworkManagementCliPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_NETWORK_MANAGEMENT_CLI,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginNetworkManagementCliFlush()
#define emberAfPluginNetworkManagementCliDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_NETWORK_MANAGEMENT_CLI) ) { x; }
#define emberAfPluginNetworkManagementCliPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_NETWORK_MANAGEMENT_CLI, (buffer), (len), (withSpace))
#define emberAfPluginNetworkManagementCliPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_NETWORK_MANAGEMENT_CLI, (buffer))
#else
#define emberAfPluginNetworkManagementCliPrint(...)
#define emberAfPluginNetworkManagementCliPrintln(...)
#define emberAfPluginNetworkManagementCliFlush()
#define emberAfPluginNetworkManagementCliDebugExec(x)
#define emberAfPluginNetworkManagementCliPrintBuffer(buffer, len, withSpace)
#define emberAfPluginNetworkManagementCliPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_NETWORK_MANAGEMENT_CLI)


// Generated functions for use within plugin On/Off Server
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_ON_OFF_SERVER)
#define emberAfPluginOnOffServerPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_ON_OFF_SERVER, __VA_ARGS__)
#define emberAfPluginOnOffServerPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_ON_OFF_SERVER,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginOnOffServerFlush()
#define emberAfPluginOnOffServerDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_ON_OFF_SERVER) ) { x; }
#define emberAfPluginOnOffServerPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_ON_OFF_SERVER, (buffer), (len), (withSpace))
#define emberAfPluginOnOffServerPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_ON_OFF_SERVER, (buffer))
#else
#define emberAfPluginOnOffServerPrint(...)
#define emberAfPluginOnOffServerPrintln(...)
#define emberAfPluginOnOffServerFlush()
#define emberAfPluginOnOffServerDebugExec(x)
#define emberAfPluginOnOffServerPrintBuffer(buffer, len, withSpace)
#define emberAfPluginOnOffServerPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_ON_OFF_SERVER)


// Generated functions for use within plugin OTA Bootload Client
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_CLIENT)
#define emberAfPluginOtaBootloadClientPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_CLIENT, __VA_ARGS__)
#define emberAfPluginOtaBootloadClientPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_CLIENT,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginOtaBootloadClientFlush()
#define emberAfPluginOtaBootloadClientDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_CLIENT) ) { x; }
#define emberAfPluginOtaBootloadClientPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_CLIENT, (buffer), (len), (withSpace))
#define emberAfPluginOtaBootloadClientPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_CLIENT, (buffer))
#else
#define emberAfPluginOtaBootloadClientPrint(...)
#define emberAfPluginOtaBootloadClientPrintln(...)
#define emberAfPluginOtaBootloadClientFlush()
#define emberAfPluginOtaBootloadClientDebugExec(x)
#define emberAfPluginOtaBootloadClientPrintBuffer(buffer, len, withSpace)
#define emberAfPluginOtaBootloadClientPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_CLIENT)


// Generated functions for use within plugin OTA Bootload Client Policy
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_CLIENT_POLICY)
#define emberAfPluginOtaBootloadClientPolicyPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_CLIENT_POLICY, __VA_ARGS__)
#define emberAfPluginOtaBootloadClientPolicyPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_CLIENT_POLICY,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginOtaBootloadClientPolicyFlush()
#define emberAfPluginOtaBootloadClientPolicyDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_CLIENT_POLICY) ) { x; }
#define emberAfPluginOtaBootloadClientPolicyPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_CLIENT_POLICY, (buffer), (len), (withSpace))
#define emberAfPluginOtaBootloadClientPolicyPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_CLIENT_POLICY, (buffer))
#else
#define emberAfPluginOtaBootloadClientPolicyPrint(...)
#define emberAfPluginOtaBootloadClientPolicyPrintln(...)
#define emberAfPluginOtaBootloadClientPolicyFlush()
#define emberAfPluginOtaBootloadClientPolicyDebugExec(x)
#define emberAfPluginOtaBootloadClientPolicyPrintBuffer(buffer, len, withSpace)
#define emberAfPluginOtaBootloadClientPolicyPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_CLIENT_POLICY)


// Generated functions for use within plugin OTA Bootload Core
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_CORE)
#define emberAfPluginOtaBootloadCorePrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_CORE, __VA_ARGS__)
#define emberAfPluginOtaBootloadCorePrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_CORE,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginOtaBootloadCoreFlush()
#define emberAfPluginOtaBootloadCoreDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_CORE) ) { x; }
#define emberAfPluginOtaBootloadCorePrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_CORE, (buffer), (len), (withSpace))
#define emberAfPluginOtaBootloadCorePrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_CORE, (buffer))
#else
#define emberAfPluginOtaBootloadCorePrint(...)
#define emberAfPluginOtaBootloadCorePrintln(...)
#define emberAfPluginOtaBootloadCoreFlush()
#define emberAfPluginOtaBootloadCoreDebugExec(x)
#define emberAfPluginOtaBootloadCorePrintBuffer(buffer, len, withSpace)
#define emberAfPluginOtaBootloadCorePrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_CORE)


// Generated functions for use within plugin OTA Bootload Storage CLI
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_STORAGE_CLI)
#define emberAfPluginOtaBootloadStorageCliPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_STORAGE_CLI, __VA_ARGS__)
#define emberAfPluginOtaBootloadStorageCliPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_STORAGE_CLI,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginOtaBootloadStorageCliFlush()
#define emberAfPluginOtaBootloadStorageCliDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_STORAGE_CLI) ) { x; }
#define emberAfPluginOtaBootloadStorageCliPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_STORAGE_CLI, (buffer), (len), (withSpace))
#define emberAfPluginOtaBootloadStorageCliPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_STORAGE_CLI, (buffer))
#else
#define emberAfPluginOtaBootloadStorageCliPrint(...)
#define emberAfPluginOtaBootloadStorageCliPrintln(...)
#define emberAfPluginOtaBootloadStorageCliFlush()
#define emberAfPluginOtaBootloadStorageCliDebugExec(x)
#define emberAfPluginOtaBootloadStorageCliPrintBuffer(buffer, len, withSpace)
#define emberAfPluginOtaBootloadStorageCliPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_STORAGE_CLI)


// Generated functions for use within plugin OTA Bootload Storage Core
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_STORAGE_CORE)
#define emberAfPluginOtaBootloadStorageCorePrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_STORAGE_CORE, __VA_ARGS__)
#define emberAfPluginOtaBootloadStorageCorePrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_STORAGE_CORE,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginOtaBootloadStorageCoreFlush()
#define emberAfPluginOtaBootloadStorageCoreDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_STORAGE_CORE) ) { x; }
#define emberAfPluginOtaBootloadStorageCorePrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_STORAGE_CORE, (buffer), (len), (withSpace))
#define emberAfPluginOtaBootloadStorageCorePrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_STORAGE_CORE, (buffer))
#else
#define emberAfPluginOtaBootloadStorageCorePrint(...)
#define emberAfPluginOtaBootloadStorageCorePrintln(...)
#define emberAfPluginOtaBootloadStorageCoreFlush()
#define emberAfPluginOtaBootloadStorageCoreDebugExec(x)
#define emberAfPluginOtaBootloadStorageCorePrintBuffer(buffer, len, withSpace)
#define emberAfPluginOtaBootloadStorageCorePrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_STORAGE_CORE)


// Generated functions for use within plugin OTA Bootload Storage EEPROM
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_STORAGE_EEPROM)
#define emberAfPluginOtaBootloadStorageEepromPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_STORAGE_EEPROM, __VA_ARGS__)
#define emberAfPluginOtaBootloadStorageEepromPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_STORAGE_EEPROM,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginOtaBootloadStorageEepromFlush()
#define emberAfPluginOtaBootloadStorageEepromDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_STORAGE_EEPROM) ) { x; }
#define emberAfPluginOtaBootloadStorageEepromPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_STORAGE_EEPROM, (buffer), (len), (withSpace))
#define emberAfPluginOtaBootloadStorageEepromPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_STORAGE_EEPROM, (buffer))
#else
#define emberAfPluginOtaBootloadStorageEepromPrint(...)
#define emberAfPluginOtaBootloadStorageEepromPrintln(...)
#define emberAfPluginOtaBootloadStorageEepromFlush()
#define emberAfPluginOtaBootloadStorageEepromDebugExec(x)
#define emberAfPluginOtaBootloadStorageEepromPrintBuffer(buffer, len, withSpace)
#define emberAfPluginOtaBootloadStorageEepromPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_OTA_BOOTLOAD_STORAGE_EEPROM)


// Generated functions for use within plugin RAIL Library
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_RAIL_LIBRARY)
#define emberAfPluginRailLibraryPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_RAIL_LIBRARY, __VA_ARGS__)
#define emberAfPluginRailLibraryPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_RAIL_LIBRARY,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginRailLibraryFlush()
#define emberAfPluginRailLibraryDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_RAIL_LIBRARY) ) { x; }
#define emberAfPluginRailLibraryPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_RAIL_LIBRARY, (buffer), (len), (withSpace))
#define emberAfPluginRailLibraryPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_RAIL_LIBRARY, (buffer))
#else
#define emberAfPluginRailLibraryPrint(...)
#define emberAfPluginRailLibraryPrintln(...)
#define emberAfPluginRailLibraryFlush()
#define emberAfPluginRailLibraryDebugExec(x)
#define emberAfPluginRailLibraryPrintBuffer(buffer, len, withSpace)
#define emberAfPluginRailLibraryPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_RAIL_LIBRARY)


// Generated functions for use within plugin Scan Debug
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_SCAN_DEBUG)
#define emberAfPluginScanDebugPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_SCAN_DEBUG, __VA_ARGS__)
#define emberAfPluginScanDebugPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_SCAN_DEBUG,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginScanDebugFlush()
#define emberAfPluginScanDebugDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_SCAN_DEBUG) ) { x; }
#define emberAfPluginScanDebugPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_SCAN_DEBUG, (buffer), (len), (withSpace))
#define emberAfPluginScanDebugPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_SCAN_DEBUG, (buffer))
#else
#define emberAfPluginScanDebugPrint(...)
#define emberAfPluginScanDebugPrintln(...)
#define emberAfPluginScanDebugFlush()
#define emberAfPluginScanDebugDebugExec(x)
#define emberAfPluginScanDebugPrintBuffer(buffer, len, withSpace)
#define emberAfPluginScanDebugPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_SCAN_DEBUG)


// Generated functions for use within plugin Serial
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_SERIAL)
#define emberAfPluginSerialPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_SERIAL, __VA_ARGS__)
#define emberAfPluginSerialPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_SERIAL,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginSerialFlush()
#define emberAfPluginSerialDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_SERIAL) ) { x; }
#define emberAfPluginSerialPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_SERIAL, (buffer), (len), (withSpace))
#define emberAfPluginSerialPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_SERIAL, (buffer))
#else
#define emberAfPluginSerialPrint(...)
#define emberAfPluginSerialPrintln(...)
#define emberAfPluginSerialFlush()
#define emberAfPluginSerialDebugExec(x)
#define emberAfPluginSerialPrintBuffer(buffer, len, withSpace)
#define emberAfPluginSerialPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_SERIAL)


// Generated functions for use within plugin Simulated EEPROM version 1 Library
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_SIM_EEPROM1)
#define emberAfPluginSimEeprom1Print(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_SIM_EEPROM1, __VA_ARGS__)
#define emberAfPluginSimEeprom1Println(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_SIM_EEPROM1,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginSimEeprom1Flush()
#define emberAfPluginSimEeprom1DebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_SIM_EEPROM1) ) { x; }
#define emberAfPluginSimEeprom1PrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_SIM_EEPROM1, (buffer), (len), (withSpace))
#define emberAfPluginSimEeprom1PrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_SIM_EEPROM1, (buffer))
#else
#define emberAfPluginSimEeprom1Print(...)
#define emberAfPluginSimEeprom1Println(...)
#define emberAfPluginSimEeprom1Flush()
#define emberAfPluginSimEeprom1DebugExec(x)
#define emberAfPluginSimEeprom1PrintBuffer(buffer, len, withSpace)
#define emberAfPluginSimEeprom1PrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_SIM_EEPROM1)


// Generated functions for use within plugin Stateless Address Autoconfiguration (SLAAC) Client
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_SLAAC_CLIENT)
#define emberAfPluginSlaacClientPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_SLAAC_CLIENT, __VA_ARGS__)
#define emberAfPluginSlaacClientPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_SLAAC_CLIENT,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginSlaacClientFlush()
#define emberAfPluginSlaacClientDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_SLAAC_CLIENT) ) { x; }
#define emberAfPluginSlaacClientPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_SLAAC_CLIENT, (buffer), (len), (withSpace))
#define emberAfPluginSlaacClientPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_SLAAC_CLIENT, (buffer))
#else
#define emberAfPluginSlaacClientPrint(...)
#define emberAfPluginSlaacClientPrintln(...)
#define emberAfPluginSlaacClientFlush()
#define emberAfPluginSlaacClientDebugExec(x)
#define emberAfPluginSlaacClientPrintBuffer(buffer, len, withSpace)
#define emberAfPluginSlaacClientPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_SLAAC_CLIENT)


// Generated functions for use within plugin Thread Stack Library with Silicon Labs TLS support
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_THREAD_STACK)
#define emberAfPluginThreadStackPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_THREAD_STACK, __VA_ARGS__)
#define emberAfPluginThreadStackPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_THREAD_STACK,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginThreadStackFlush()
#define emberAfPluginThreadStackDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_THREAD_STACK) ) { x; }
#define emberAfPluginThreadStackPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_THREAD_STACK, (buffer), (len), (withSpace))
#define emberAfPluginThreadStackPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_THREAD_STACK, (buffer))
#else
#define emberAfPluginThreadStackPrint(...)
#define emberAfPluginThreadStackPrintln(...)
#define emberAfPluginThreadStackFlush()
#define emberAfPluginThreadStackDebugExec(x)
#define emberAfPluginThreadStackPrintBuffer(buffer, len, withSpace)
#define emberAfPluginThreadStackPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_THREAD_STACK)


// Generated functions for use within plugin Version Debug
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_VERSION_DEBUG)
#define emberAfPluginVersionDebugPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_VERSION_DEBUG, __VA_ARGS__)
#define emberAfPluginVersionDebugPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_VERSION_DEBUG,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginVersionDebugFlush()
#define emberAfPluginVersionDebugDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_VERSION_DEBUG) ) { x; }
#define emberAfPluginVersionDebugPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_VERSION_DEBUG, (buffer), (len), (withSpace))
#define emberAfPluginVersionDebugPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_VERSION_DEBUG, (buffer))
#else
#define emberAfPluginVersionDebugPrint(...)
#define emberAfPluginVersionDebugPrintln(...)
#define emberAfPluginVersionDebugFlush()
#define emberAfPluginVersionDebugDebugExec(x)
#define emberAfPluginVersionDebugPrintBuffer(buffer, len, withSpace)
#define emberAfPluginVersionDebugPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_VERSION_DEBUG)


// Generated functions for use within plugin ZCL Core
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_ZCL_CORE)
#define emberAfPluginZclCorePrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_ZCL_CORE, __VA_ARGS__)
#define emberAfPluginZclCorePrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_ZCL_CORE,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginZclCoreFlush()
#define emberAfPluginZclCoreDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_ZCL_CORE) ) { x; }
#define emberAfPluginZclCorePrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_ZCL_CORE, (buffer), (len), (withSpace))
#define emberAfPluginZclCorePrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_ZCL_CORE, (buffer))
#else
#define emberAfPluginZclCorePrint(...)
#define emberAfPluginZclCorePrintln(...)
#define emberAfPluginZclCoreFlush()
#define emberAfPluginZclCoreDebugExec(x)
#define emberAfPluginZclCorePrintBuffer(buffer, len, withSpace)
#define emberAfPluginZclCorePrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_ZCL_CORE)


// Generated functions for use within plugin ZCL Core CLI
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_ZCL_CORE_CLI)
#define emberAfPluginZclCoreCliPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_ZCL_CORE_CLI, __VA_ARGS__)
#define emberAfPluginZclCoreCliPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_ZCL_CORE_CLI,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginZclCoreCliFlush()
#define emberAfPluginZclCoreCliDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_ZCL_CORE_CLI) ) { x; }
#define emberAfPluginZclCoreCliPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_ZCL_CORE_CLI, (buffer), (len), (withSpace))
#define emberAfPluginZclCoreCliPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_ZCL_CORE_CLI, (buffer))
#else
#define emberAfPluginZclCoreCliPrint(...)
#define emberAfPluginZclCoreCliPrintln(...)
#define emberAfPluginZclCoreCliFlush()
#define emberAfPluginZclCoreCliDebugExec(x)
#define emberAfPluginZclCoreCliPrintBuffer(buffer, len, withSpace)
#define emberAfPluginZclCoreCliPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_ZCL_CORE_CLI)


// Generated functions for use within area Core
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_CORE)
#define emberAfCorePrint(...) emberAfPrint(EMBER_AF_PRINT_CORE, __VA_ARGS__)
#define emberAfCorePrintln(...) emberAfPrintln(EMBER_AF_PRINT_CORE,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfCoreFlush()
#define emberAfCoreDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_CORE) ) { x; }
#define emberAfCorePrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_CORE, (buffer), (len), (withSpace))
#define emberAfCorePrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_CORE, (buffer))
#else
#define emberAfCorePrint(...)
#define emberAfCorePrintln(...)
#define emberAfCoreFlush()
#define emberAfCoreDebugExec(x)
#define emberAfCorePrintBuffer(buffer, len, withSpace)
#define emberAfCorePrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_CORE)


// Generated functions for use within area Debug
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_DEBUG)
#define emberAfDebugPrint(...) emberAfPrint(EMBER_AF_PRINT_DEBUG, __VA_ARGS__)
#define emberAfDebugPrintln(...) emberAfPrintln(EMBER_AF_PRINT_DEBUG,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfDebugFlush()
#define emberAfDebugDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_DEBUG) ) { x; }
#define emberAfDebugPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_DEBUG, (buffer), (len), (withSpace))
#define emberAfDebugPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_DEBUG, (buffer))
#else
#define emberAfDebugPrint(...)
#define emberAfDebugPrintln(...)
#define emberAfDebugFlush()
#define emberAfDebugDebugExec(x)
#define emberAfDebugPrintBuffer(buffer, len, withSpace)
#define emberAfDebugPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_DEBUG)


// Generated functions for use within area Application
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_APP)
#define emberAfAppPrint(...) emberAfPrint(EMBER_AF_PRINT_APP, __VA_ARGS__)
#define emberAfAppPrintln(...) emberAfPrintln(EMBER_AF_PRINT_APP,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfAppFlush()
#define emberAfAppDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_APP) ) { x; }
#define emberAfAppPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_APP, (buffer), (len), (withSpace))
#define emberAfAppPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_APP, (buffer))
#else
#define emberAfAppPrint(...)
#define emberAfAppPrintln(...)
#define emberAfAppFlush()
#define emberAfAppDebugExec(x)
#define emberAfAppPrintBuffer(buffer, len, withSpace)
#define emberAfAppPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_APP)


// Generated functions for use within area Custom messages (1)
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_CUSTOM1)
#define emberAfCustom1Print(...) emberAfPrint(EMBER_AF_PRINT_CUSTOM1, __VA_ARGS__)
#define emberAfCustom1Println(...) emberAfPrintln(EMBER_AF_PRINT_CUSTOM1,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfCustom1Flush()
#define emberAfCustom1DebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_CUSTOM1) ) { x; }
#define emberAfCustom1PrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_CUSTOM1, (buffer), (len), (withSpace))
#define emberAfCustom1PrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_CUSTOM1, (buffer))
#else
#define emberAfCustom1Print(...)
#define emberAfCustom1Println(...)
#define emberAfCustom1Flush()
#define emberAfCustom1DebugExec(x)
#define emberAfCustom1PrintBuffer(buffer, len, withSpace)
#define emberAfCustom1PrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_CUSTOM1)


// Generated functions for use within area Custom messages (2)
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_CUSTOM2)
#define emberAfCustom2Print(...) emberAfPrint(EMBER_AF_PRINT_CUSTOM2, __VA_ARGS__)
#define emberAfCustom2Println(...) emberAfPrintln(EMBER_AF_PRINT_CUSTOM2,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfCustom2Flush()
#define emberAfCustom2DebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_CUSTOM2) ) { x; }
#define emberAfCustom2PrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_CUSTOM2, (buffer), (len), (withSpace))
#define emberAfCustom2PrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_CUSTOM2, (buffer))
#else
#define emberAfCustom2Print(...)
#define emberAfCustom2Println(...)
#define emberAfCustom2Flush()
#define emberAfCustom2DebugExec(x)
#define emberAfCustom2PrintBuffer(buffer, len, withSpace)
#define emberAfCustom2PrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_CUSTOM2)


// Generated functions for use within area Custom messages (3)
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_CUSTOM3)
#define emberAfCustom3Print(...) emberAfPrint(EMBER_AF_PRINT_CUSTOM3, __VA_ARGS__)
#define emberAfCustom3Println(...) emberAfPrintln(EMBER_AF_PRINT_CUSTOM3,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfCustom3Flush()
#define emberAfCustom3DebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_CUSTOM3) ) { x; }
#define emberAfCustom3PrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_CUSTOM3, (buffer), (len), (withSpace))
#define emberAfCustom3PrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_CUSTOM3, (buffer))
#else
#define emberAfCustom3Print(...)
#define emberAfCustom3Println(...)
#define emberAfCustom3Flush()
#define emberAfCustom3DebugExec(x)
#define emberAfCustom3PrintBuffer(buffer, len, withSpace)
#define emberAfCustom3PrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_CUSTOM3)


#endif // SILABS_EMBER_AF_DEBUG_PRINTING_CONFIGURATION
